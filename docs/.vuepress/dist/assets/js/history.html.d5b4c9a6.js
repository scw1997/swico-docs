"use strict";(self.webpackChunksecywo_docs=self.webpackChunksecywo_docs||[]).push([[26],{66:(s,n,a)=>{a.r(n),a.d(n,{comp:()=>d,data:()=>u});var t=a(641);const e=(0,t.Lk)("h1",{id:"history",tabindex:"-1"},[(0,t.Lk)("a",{class:"header-anchor",href:"#history"},[(0,t.Lk)("span",null,"history")])],-1),p=(0,t.Lk)("ul",null,[(0,t.Lk)("li",null,[(0,t.eW)("类型："),(0,t.Lk)("code",null,"SwicoHistoryType")])],-1),o=(0,t.Lk)("p",null,"history用来进行路由的命令式跳转，适合在页面组件外部进行路由跳转。",-1),l=(0,t.Lk)("code",null,"useNav",-1),c=(0,t.Fv)('<p>history的值是一个对象，包含多个方法和属性。它的类型定义如下：</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">SwicoHistoryType</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token function-variable function">push</span><span class="token operator">:</span> <span class="token punctuation">(</span>to<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> SwicoHistoryOptionType<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n  replace<span class="token operator">:</span> SwicoHistoryType<span class="token punctuation">[</span><span class="token string">&#39;push&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n  <span class="token function-variable function">go</span><span class="token operator">:</span> <span class="token punctuation">(</span>delta<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n  <span class="token function-variable function">forward</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n  <span class="token function-variable function">back</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n  location<span class="token operator">:</span> SwicoLocationType<span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="push" tabindex="-1"><a class="header-anchor" href="#push"><span>push</span></a></h2><ul><li>类型：<code>(to: string | SwicoHistoryOptionType) =&gt; void</code></li></ul><p>其中<code>SwicoHistoryOptionType</code>类型定义如下：</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">SwicoHistoryOptionType</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  query<span class="token operator">?</span><span class="token operator">:</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>\n  params<span class="token operator">?</span><span class="token operator">:</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>\n  hash<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n  path<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n  name<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用于跳转至新的路由。</p><p>接收一个<code>to</code>参数：</p><ul><li><p>当参数值类型为string时，表示对应的路由完整<code>path</code></p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> history <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;swico&#39;</span>\n\n<span class="token comment">// ...</span>\n<span class="token keyword">const</span> <span class="token function-variable function">jumpLogin</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>\nhistory<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&#39;/login&#39;</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n<span class="token comment">// ...</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>当为对象时，其类型为<code>SwicoHistoryOptionType</code>，见下方说明：</p><table><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>query</td><td>Record&lt;string,any&gt;</td><td>searchParams的序列化对象。<br>如欲访问路由地址为<code>/news?a=1&amp;b=2</code>，则param值应为<code>{a:1,b:2}</code></td></tr><tr><td>params</td><td>Record&lt;string,any&gt;</td><td>路由动态参数组成的对象。<br>如欲跳转页面路由地址为<code>/news/123</code>，其路由path为<code>/news/:id</code>，则params应为<code>{id:123}</code></td></tr><tr><td>hash</td><td>string</td><td>路由hash字符串</td></tr><tr><td>name</td><td>string</td><td>路由唯一标识值</td></tr><tr><td>path</td><td>string</td><td>配置的路由地址（不带任何参数）<br><code>注：当name有值时，path值无效</code></td></tr></tbody></table><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">//推荐使用包含name的对象形式代替string形式</span>\n\n<span class="token comment">// {</span>\n<span class="token comment">//     path:&#39;/test&#39;,</span>\n<span class="token comment">//     name:&#39;test&#39;        </span>\n<span class="token comment">// }</span>\n\nhistory<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&#39;test&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">//相当于push(&#39;/test&#39;)</span>\nhistory<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&#39;test&#39;</span><span class="token punctuation">,</span><span class="token literal-property property">query</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">a</span><span class="token operator">:</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span><span class="token literal-property property">b</span><span class="token operator">:</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token comment">//相当于push(&#39;/test?a=a&amp;b=b&#39;)</span>\nhistory<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&#39;test&#39;</span><span class="token punctuation">,</span><span class="token literal-property property">hash</span><span class="token operator">:</span><span class="token string">&#39;hash&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token comment">//相当于push(&#39;/test#/hash&#39;)</span>\n\n<span class="token comment">// {</span>\n<span class="token comment">//     path:&#39;/test1/:id&#39;,</span>\n<span class="token comment">//     name:&#39;test1&#39;        </span>\n<span class="token comment">// }</span>\n\nhistory<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&#39;test1&#39;</span><span class="token punctuation">,</span><span class="token literal-property property">params</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">id</span><span class="token operator">:</span><span class="token string">&#39;123&#39;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token comment">//相当于push(&#39;/test1/123&#39;)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="replace" tabindex="-1"><a class="header-anchor" href="#replace"><span>replace</span></a></h2><ul><li>类型：<code>(to: string | SwicoHistoryOptionType) =&gt; void</code></li></ul><p>用于替换当前路由为新的路由。其参数类型与push相同，用法请参考<code>push</code>。</p><h2 id="go" tabindex="-1"><a class="header-anchor" href="#go"><span>go</span></a></h2><ul><li>类型：<code>(delta: number) =&gt; void</code></li></ul><p>用于跳转至当前历史记录的指定位置的路由。</p><p>接收一个参数<code>delta</code>，类型为<code>number</code>。只能为整数。访问的是基于当前路由的相对位置的路由。如<code>go(-1)</code> 表示访问上一个路由，<code>go(1)</code> 表示前进一个路由 。</p><h2 id="forward" tabindex="-1"><a class="header-anchor" href="#forward"><span>forward</span></a></h2><ul><li>类型：<code>() =&gt; void</code></li></ul><p>用于前进一个路由，与<code>history.go(1)</code>等价</p><h2 id="back" tabindex="-1"><a class="header-anchor" href="#back"><span>back</span></a></h2><ul><li>类型：<code>() =&gt; void</code></li></ul><p>用于访问上一个路由，与<code>history.go(-1)</code>等价</p><h2 id="location" tabindex="-1"><a class="header-anchor" href="#location"><span>location</span></a></h2><ul><li>类型：<code>SwicoLocationType</code></li></ul><p>类型定义如下：</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">SwicoLocationType</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  query<span class="token operator">?</span><span class="token operator">:</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>\n  params<span class="token operator">?</span><span class="token operator">:</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>\n  hash<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n  name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span> \n  path<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span> \n  pathname<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span> \n  search<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span> \n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用于获取当前页面路由的相关参数：</p><table><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>query</td><td>Record&lt;string,any&gt;</td><td>searchParams的序列化对象。<br>如当前页面地址为<code>/news?a=1&amp;b=2</code>，则query值为<code>{a:1,b:2}</code></td></tr><tr><td>params</td><td>Record&lt;string,any&gt;</td><td>路由动态参数组成的对象。<br>如当前页面地址为<code>/news/123</code>，其路由path为<code>/news/:id</code>，则params值为<code>{id:123}</code></td></tr><tr><td>hash</td><td>string</td><td>路由hash字符串</td></tr><tr><td>name</td><td>string</td><td>路由唯一标识值</td></tr><tr><td>path</td><td>string</td><td>配置的路由地址（不带任何参数）</td></tr><tr><td>pathname</td><td>string</td><td>带base的完整path值</td></tr><tr><td>search</td><td>string</td><td>路由查询字符串,如<code>?a=1&amp;b=2</code></td></tr></tbody></table><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> history <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;swico&#39;</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> location <span class="token punctuation">}</span> <span class="token operator">=</span> history\n\n<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;location&#39;</span><span class="token punctuation">,</span>location<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>假设当前页面对应的swico路由配置为：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="swico.ts"><pre class="language-javascript"><code><span class="token comment">//... </span>\n<span class="token literal-property property">router</span><span class="token operator">:</span><span class="token punctuation">{</span>\n   <span class="token literal-property property">base</span><span class="token operator">:</span><span class="token string">&#39;/base&#39;</span><span class="token punctuation">,</span>\n   <span class="token literal-property property">routes</span><span class="token operator">:</span><span class="token punctuation">[</span>\n       <span class="token comment">//...</span>\n     <span class="token punctuation">{</span>\n       <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&#39;news-detail&#39;</span><span class="token punctuation">,</span>\n       <span class="token literal-property property">path</span><span class="token operator">:</span><span class="token string">&#39;/news/:id&#39;</span><span class="token punctuation">,</span>\n     <span class="token punctuation">}</span>\n    <span class="token comment">//...</span>\n   <span class="token punctuation">]</span> \n<span class="token punctuation">}</span>\n<span class="token comment">//... </span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>访问<code>/base/news/123?a=1&amp;b=2#hash</code>，则通过<code>history.location</code>获取到的值为：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>\n  <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&#39;news-detail&#39;</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">path</span><span class="token operator">:</span><span class="token string">&#39;/news/123&#39;</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">pathname</span><span class="token operator">:</span><span class="token string">&#39;/base/news/123&#39;</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">params</span><span class="token operator">:</span><span class="token punctuation">{</span>\n      <span class="token literal-property property">id</span><span class="token operator">:</span><span class="token string">&#39;123&#39;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">query</span><span class="token operator">:</span><span class="token punctuation">{</span>\n      <span class="token literal-property property">a</span><span class="token operator">:</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">b</span><span class="token operator">:</span><span class="token string">&#39;2&#39;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>  \n  <span class="token literal-property property">hash</span><span class="token operator">:</span><span class="token string">&#39;#hash&#39;</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">search</span><span class="token operator">:</span><span class="token string">&#39;?a=1&amp;b=2&#39;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="history-location中的path和pathname的区别" tabindex="-1"><a class="header-anchor" href="#history-location中的path和pathname的区别"><span>history.location中的path和pathname的区别</span></a></h3>',34),i=(0,t.Lk)("p",null,[(0,t.eW)("例如当base值为"),(0,t.Lk)("code",null,"/base"),(0,t.eW)("，访问的当前路由地址为"),(0,t.Lk)("code",null,"/base/news/list?id=1"),(0,t.eW)("，则path值为"),(0,t.Lk)("code",null,"/news/list"),(0,t.eW)(",而pathname为"),(0,t.Lk)("code",null,"/base/news/list")],-1),r={},d=(0,a(262).A)(r,[["render",function(s,n){const a=(0,t.g2)("RouteLink");return(0,t.uX)(),(0,t.CE)("div",null,[e,p,o,(0,t.Lk)("p",null,[(0,t.eW)("组件内部跳转推荐使用Hooks API "),l,(0,t.eW)("，详见："),(0,t.bF)(a,{to:"/hooks.html#usenav"},{default:(0,t.k6)((()=>[(0,t.eW)("API > Hooks > useNav")])),_:1})]),(0,t.Lk)("p",null,[(0,t.eW)("关于路由配置相关请阅读："),(0,t.bF)(a,{to:"/router.html"},{default:(0,t.k6)((()=>[(0,t.eW)("路由")])),_:1})]),c,(0,t.Lk)("p",null,[(0,t.eW)("二者的区别主要在于路由base值的设置（见："),(0,t.bF)(a,{to:"/router.html#base"},{default:(0,t.k6)((()=>[(0,t.eW)("路由 > 基本配置 > base")])),_:1}),(0,t.eW)("）。")]),i])}]]),u=JSON.parse('{"path":"/history.html","title":"history","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"push","slug":"push","link":"#push","children":[]},{"level":2,"title":"replace","slug":"replace","link":"#replace","children":[]},{"level":2,"title":"go","slug":"go","link":"#go","children":[]},{"level":2,"title":"forward","slug":"forward","link":"#forward","children":[]},{"level":2,"title":"back","slug":"back","link":"#back","children":[]},{"level":2,"title":"location","slug":"location","link":"#location","children":[{"level":3,"title":"history.location中的path和pathname的区别","slug":"history-location中的path和pathname的区别","link":"#history-location中的path和pathname的区别","children":[]}]}],"git":{"updatedTime":1713865927000},"filePathRelative":"history.md"}')}}]);